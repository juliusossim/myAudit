{"version":3,"sources":["services/endpoints.js","services/authService.js","services/fileUploadService.js","services/projectService.js","services/profileService.js","services/fetch.js","redux/actions/authenticationActions.js","pages/authentication/constants/changePassword.js","pages/authentication/ChangePassword.jsx"],"names":["servers","process","paths","LOGIN","REGISTER","REGISTER_CORPORATE","VERIFY_INDIVIDUAL","VERIFY_CORPORATE","VERIFY_ACCOUNT_OTP","SEND_ACCOUNT_OTP","REGISTER_INDIVIDUAL","CHANGE_PASSWORD","RESET_PASSWORD","FORGOT_PASSWORD","PROFILE_PICTURE","PROJECT_MEDIA","DELETE_PROJECT_MEDIA","LOGO","CREATE_PROJECT_NAME","CREATE_PROJECT","VIEW_PROJECTS","VIEW_PROJECT","id","EDIT_PROJECT","DELETE_PROJECT","EDIT_PROJECT_UPDATES","PROJECT_UPDATES","UPDATE_PROJECT","PROJECT_DETAILS","PROJECT_SUMMARY","PROJECT_BY_STATUS","SUBMIT_PROJECT","PROJECT_CATEGORIES","ME","fetchBackend","endpoint","method","auth","body","pQuery","param","multipart","afterParam","setProgress","a","headers","path","url","paramsArray","Object","keys","map","key","encodeURIComponent","join","token","localStorage","getItem","Authorization","options","data","progress","onUploadProgress","uploadEvent","loaded","total","Math","floor","axios","then","res","err","response","status","errors","uploadFile","file","handleProgress","FormData","append","baseURL","console","log","get","post","patch","dispatchConnection","connection","pending","action","dispatch","register","payload","success","type","constants","REGISTER_SUCCESS","req","REGISTER_PENDING","request","error","localforage","setItem","JSON","stringify","user","REGISTER_FAILURE","verifyIndividual","VERIFY_INDIVIDUAL_PENDING","VERIFY_INDIVIDUAL_SUCCESS","VERIFY_INDIVIDUAL_FAILURE","verifyCorporate","VERIFY_CORPORATE_PENDING","VERIFY_CORPORATE_SUCCESS","VERIFY_CORPORATE_FAILURE","verifyAccountOtp","VERIFY_ACCOUNT_OTP_PENDING","VERIFY_ACCOUNT_OTP_SUCCESS","VERIFY_ACCOUNT_OTP_FAILURE","sendAccountOtp","SEND_ACCOUNT_OTP_PENDING","SEND_ACCOUNT_OTP_SUCCESS","SEND_ACCOUNT_OTP_FAILURE","login","LOGIN_SUCCESS","LOGIN_PENDING","LOGIN_FAILURE","changePassword","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_PENDING","CHANGE_PASSWORD_FAILURE","forgotPassword","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_PENDING","FORGOT_PASSWORD_FAILURE","resetPassword","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_PENDING","RESET_PASSWORD_FAILURE","formBuilderProps","formData","handleBlur","handleChange","kind","props","className","name","label","value","current_password","validations","required","pattern","validationPatterns","password","onBlur","onChange","new_password","minLength","confirm_password","confirmPassword","original","ChangePassword","useDispatch","store","useSelector","state","useState","setFormData","setErrors","show","setShow","queryParam","window","location","search","substring","modalTemplate","onClick","formItems","e","target","field","slugToString","validateField","replace","content"],"mappings":"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","file":"static/js/9.44960c47.chunk.js","sourcesContent":["import * as authEndpoints from './authService';\nimport * as fileUploads from './fileUploadService';\nimport * as projectEndpoints from './projectService';\nimport * as profileEndpoints from './profileService';\n\nconst servers = {\n  auth: process.env.REACT_APP_AUTH_SERVER,\n  project: process.env.REACT_APP_PROJECT_SERVER\n};\n\nconst paths = {\n  // auth\n  LOGIN: `${servers.auth}${authEndpoints.loginApi}`,\n  REGISTER: `${servers.auth}${authEndpoints.registerApi}`,\n  REGISTER_CORPORATE: `${servers.auth}${authEndpoints.registerCorporateApi}`,\n  VERIFY_INDIVIDUAL: `${servers.auth}${authEndpoints.verifyIndividualApi}`,\n  VERIFY_CORPORATE: `${servers.auth}${authEndpoints.verifyCorporateApi}`,\n  VERIFY_ACCOUNT_OTP: `${servers.auth}${authEndpoints.verifyAccountOtpApi}`,\n  SEND_ACCOUNT_OTP: `${servers.auth}${authEndpoints.sendAccountOtpApi}`,\n  REGISTER_INDIVIDUAL: `${servers.auth}${authEndpoints.registerIndividualApi}`,\n  CHANGE_PASSWORD: `${servers.auth}${authEndpoints.changePasswordApi}`,\n  RESET_PASSWORD: `${servers.auth}${authEndpoints.resetPassword}`,\n  FORGOT_PASSWORD: `${servers.auth}${authEndpoints.forgotPasswordApi}`,\n  // uploads\n  PROFILE_PICTURE: `${servers.project}${fileUploads.profilePic}`,\n  PROJECT_MEDIA: `${servers.project}${fileUploads.project}`,\n  DELETE_PROJECT_MEDIA: `${servers.project}${fileUploads.deleteProjectMedia}`,\n  LOGO: `${servers.project}${fileUploads.logo}`,\n  // projects\n  CREATE_PROJECT_NAME: `${servers.project}${projectEndpoints.createProjectName}`,\n  CREATE_PROJECT: `${servers.project}${projectEndpoints.createProject}`,\n  VIEW_PROJECTS: `${servers.project}${projectEndpoints.viewProjects}`,\n  VIEW_PROJECT: `${servers.project}${projectEndpoints.viewProject}`,\n  EDIT_PROJECT: `${servers.project}${projectEndpoints.editProject}`,\n  DELETE_PROJECT: `${servers.project}${projectEndpoints.deleteProject}`,\n  EDIT_PROJECT_UPDATES: `${servers.project}${projectEndpoints.editProjectUpdate}`,\n  PROJECT_UPDATES: `${servers.project}${projectEndpoints.showProjectUpdate}`,\n  UPDATE_PROJECT: `${servers.project}${projectEndpoints.updateProject}`,\n  PROJECT_DETAILS: `${servers.project}${projectEndpoints.projectDetails}`,\n  PROJECT_SUMMARY: `${servers.project}${projectEndpoints.projectSummary}`,\n  PROJECT_BY_STATUS: `${servers.project}${projectEndpoints.projectByStatus()}`,\n  SUBMIT_PROJECT: `${servers.project}${projectEndpoints.submitProject}`,\n  PROJECT_CATEGORIES: `${servers.project}${projectEndpoints.projectCategories}`,\n\n  // profile\n  ME: `${servers.auth}${profileEndpoints.me}`\n\n};\n\nexport default paths;\n","export const loginApi = 'Account/authenticate';\nexport const registerApi = 'Account/register';\nexport const registerIndividualApi = 'Account/register/individual';\nexport const verifyIndividualApi = 'Verification/personal';\nexport const verifyCorporateApi = 'Verification/corporate';\nexport const verifyAccountOtpApi = 'Verification/verifyotp';\nexport const sendAccountOtpApi = 'Verification/request';\nexport const registerCorporateApi = 'Account/register/corporate';\nexport const changePasswordApi = 'Account/change_password';\nexport const resetPassword = 'Account/reset_password';\nexport const forgotPasswordApi = 'Account/forgot_password';\n","export const profilePic = 'Uploads/profilepic';\nexport const logo = 'Uploads/logo';\nexport const project = 'Uploads/project'; // param = id\nexport const deleteProjectMedia = 'Uploads/project'; // param = id\n","export const createProjectName = 'Projects/createbyname';\nexport const createProject = 'Projects';\nexport const viewProjects = 'Projects';\nexport const viewProject = (id) => `Projects/${id}`;\nexport const projectCategories = 'categories';\nexport const deleteProject = (id) => `Projects/${id}`;\nexport const editProject = 'Projects'; // param = id\nexport const submitProject = 'Projects'; // param = ${id} afterParam = submit\nexport const projectSummary = (id) => 'Projects'; // param = ${id} afterParam = summary\nexport const projectDetails = (id) => 'Projects'; // param = ${id} afterParam = details\nexport const updateProject = (id) => 'ProjectUpdates';\nexport const showProjectUpdate = (id) => 'ProjectUpdates'; // param = ${id}\nexport const editProjectUpdate = (id) => 'ProjectUpdates'; // param = ${id}\nexport const projectByStatus = (id) => 'Projects/byPublishStatus';\n","export const me = '/Profiles/me';\nexport const getProfile = '/Profiles'; // param = id\n","import axios from 'axios';\nimport localforage from 'localforage';\nimport paths from './endpoints';\nimport constants from '../redux/constants';\n\nimport {\n  currentUser, decodeToken, getToken, logout\n} from '../utilities/auth';\n\n// const getToken = () => {\n//   const t = decodeToken('t');\n//   const token = t && t.t;\n//   return token;\n// };\n\nconst fetchBackend = async (\n  endpoint, method, auth, body,\n  pQuery, param, multipart, afterParam, setProgress\n) => {\n  const headers = {\n    'Content-Type': multipart ? 'multipart/form-data' : 'application/json'\n    // Accept: 'multipart/form-data',\n    // 'Access-Control-Allow-Origin': 'http://localhost:3000/'\n    // 'Content-Type': 'application/json'\n  };\n  // console.log(headers);\n\n  const path = paths[endpoint] || endpoint;\n  let url = `${process.env.REACT_APP_BACKEND_URL}${path}`;\n\n  if (param) {\n    url += `/${param}`;\n  }\n  if (afterParam) {\n    url += `/${afterParam}`;\n  }\n\n  if (pQuery) {\n    const paramsArray = Object.keys(pQuery).map((key) => pQuery[key] && `${encodeURIComponent(key)}=${encodeURIComponent(pQuery[key])}`);\n\n    url += `?${paramsArray.join('&')}`;\n  }\n\n  if (auth) {\n    const token = localStorage.getItem('token');\n    headers.Authorization = `Bearer ${token}`;\n  }\n  const options = {\n    url, method, headers\n  };\n\n  if (body) {\n    options.data = body;\n  }\n\n  if (setProgress) {\n    let progress = 0;\n    options.onUploadProgress = (uploadEvent) => {\n      const { loaded, total } = uploadEvent;\n      progress = Math.floor((loaded / total) * 100);\n      setProgress(progress);\n    };\n  }\n\n  return axios(options)\n    .then((res) => res, async (err) => {\n      if (err?.response?.status === 401) {\n        // log the user out and return\n        // await logout(process.env.REACT_APP_JWT_SECRET, true);\n      }\n      // console.log(err?.response?.data?.errors);\n      return err?.response?.data?.errors;\n    });\n};\n\n// export const uploadFile = (file, setProgress, handleSuccess) => {\n//   const imageFormData = new FormData();\n//   imageFormData.append('file', file);\n//   let access_token = getStorageData(\"access_token\", true);\n//\n//   let progress = 0;\n//   axios({\n//     baseURL: process.env.REACT_APP_BACKEND_URL,\n//     url: \"cfcore/Uploads/project/\",\n//     method: \"post\",\n//     headers: {\n//       authorization: `Bearer ${localforage.getItem('token')}`,\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//     data: imageFormData,\n//     onUploadProgress: (uploadEvent) => {\n//       const { loaded, total } = uploadEvent;\n//       progress = Math.floor((loaded / total) * 100);\n//       setProgress(progress);\n//     },\n//   }).then((response) => handleSuccess(response));\n// };\n\nexport const uploadFile = ({\n  file, method, url, handleProgress\n}) => {\n  let progress = 0;\n  const data = new FormData();\n  data.append('file', file);\n  axios({\n    baseURL: process.env.REACT_APP_BASE_URL,\n    method: method || 'post',\n    url,\n    data,\n    onUploadProgress: (uploadEvent) => {\n      const { loaded, total } = uploadEvent;\n      progress = Math.floor((loaded / total) * 100);\n      handleProgress(progress);\n    }\n  })\n    .then(\n      (res) => {\n        console.log(res);\n      }\n    );\n};\n\n/**\n *\n * @param {string} endpoint\n * @param {object} pQuery\n * @param {string} param\n * @param {boolean} auth\n */\nexport const get = ({\n  endpoint, pQuery, param = null, auth = true\n}) => fetchBackend(endpoint, 'GET', auth, null, pQuery, param);\n\n/**\n *\n * @param {string} endpoint\n * @param {string} afterParam\n * @param {object} body\n * @param {string} param\n * @param {boolean} auth\n * @param {boolean} multipart\n * @param {function} setProgress\n */\nexport const post = ({\n  endpoint, body, auth = true, multipart, param, afterParam, setProgress\n}) => fetchBackend(endpoint, 'POST', auth, body, null, param, multipart, afterParam, setProgress);\n\n/**\n *\n * @param {string} endpoint\n * @param {object} body\n * @param {string} param\n * @param {string} pQuery\n * @param {boolean} auth\n * @param {boolean} multipart\n */\nexport const patch = ({\n  endpoint, body, param, pQuery, auth = true, multipart\n}) => fetchBackend(endpoint, 'PATCH', auth, body, pQuery, param, multipart);\n\n/**\n *\n * @param {string} endpoint\n * @param {string} param\n * @param {boolean} auth\n */\nexport const del = ({\n  endpoint, param, auth = true\n}) => fetchBackend(endpoint, 'DELETE', auth, null, null, param);\n","import localforage from 'localforage';\nimport { post, get } from '../../services/fetch';\nimport constants from '../constants';\n\nconst dispatchConnection = (connection, pending, action) => async (dispatch) => {\n  dispatch(pending(connection));\n  return connection.then((response) => action({ response, dispatch }));\n};\n\nexport const register = (payload) => {\n  const request = (req) => ({ type: constants.REGISTER_PENDING, request: req });\n  const success = (response) => ({ type: constants.REGISTER_SUCCESS, response });\n  const failure = (error) => ({ type: constants.REGISTER_FAILURE, error });\n\n  return async (dispatch) => {\n    // const endpoints = {\n    //   individual: 'REGISTER_INDIVIDUAL',\n    //   corporate: 'REGISTER_CORPORATE'\n    // };\n    // const endpoint = typeof endpoints[type] !== 'undefined' && endpoints[type];\n    const res = post({ endpoint: 'REGISTER', auth: false, body: payload });\n\n    dispatch(request(res));\n\n    return res.then((response) => {\n      if (response?.status === 200 || response?.status === 201) {\n        localforage.setItem('user', response.data);\n        localStorage.setItem('user', JSON.stringify(response.data.data.data.user));\n        dispatch(success(response?.data));\n      } else {\n        dispatch(failure(response?.errors || response));\n      }\n    });\n  };\n};\n\nexport const verifyIndividual = (payload) => {\n  console.log(payload);\n  const request = (req) => ({ type: constants.VERIFY_INDIVIDUAL_PENDING, request: req });\n  const success = (response) => ({ type: constants.VERIFY_INDIVIDUAL_SUCCESS, response });\n  const failure = (error) => ({ type: constants.VERIFY_INDIVIDUAL_FAILURE, error });\n  const connection = get({ endpoint: 'VERIFY_INDIVIDUAL', auth: false, pQuery: payload });\n  const dispatchActions = ({ response, dispatch }) => {\n    if (response?.status === 200) {\n      dispatch(success(response?.data));\n    } else {\n      dispatch(failure(response));\n    }\n  };\n  return dispatchConnection(connection, request, dispatchActions);\n};\n\nexport const verifyCorporate = (payload) => {\n  const request = (req) => ({ type: constants.VERIFY_CORPORATE_PENDING, request: req });\n  const success = (response) => ({ type: constants.VERIFY_CORPORATE_SUCCESS, response });\n  const failure = (error) => ({ type: constants.VERIFY_CORPORATE_FAILURE, error });\n  const connection = get({\n    endpoint: 'VERIFY_CORPORATE', auth: false, pQuery: payload\n  });\n  const dispatchActions = ({ response, dispatch }) => {\n    if (response?.status === 200) {\n      dispatch(success(response?.data));\n    } else {\n      dispatch(failure(response));\n    }\n  };\n  return dispatchConnection(connection, request, dispatchActions);\n};\n\nexport const verifyAccountOtp = (payload) => {\n  const request = (req) => ({ type: constants.VERIFY_ACCOUNT_OTP_PENDING, request: req });\n  const success = (response) => ({ type: constants.VERIFY_ACCOUNT_OTP_SUCCESS, response });\n  const failure = (error) => ({ type: constants.VERIFY_ACCOUNT_OTP_FAILURE, error });\n  const connection = post({ endpoint: 'VERIFY_ACCOUNT_OTP', auth: false, body: payload });\n  const dispatchActions = ({ response, dispatch }) => {\n    if (response?.status === 200) {\n      dispatch(success(response?.data));\n    } else {\n      dispatch(failure(response));\n    }\n  };\n  return dispatchConnection(connection, request, dispatchActions);\n};\nexport const sendAccountOtp = (payload) => {\n  const request = (req) => ({ type: constants.SEND_ACCOUNT_OTP_PENDING, request: req });\n  const success = (response) => ({ type: constants.SEND_ACCOUNT_OTP_SUCCESS, response });\n  const failure = (error) => ({ type: constants.SEND_ACCOUNT_OTP_FAILURE, error });\n  const connection = get({ endpoint: 'SEND_ACCOUNT_OTP', auth: false, pQuery: payload });\n  const dispatchActions = ({ response, dispatch }) => {\n    if (response?.status === 200) {\n      dispatch(success(response?.data));\n    } else {\n      dispatch(failure(response));\n    }\n  };\n  return dispatchConnection(connection, request, dispatchActions);\n};\n\nexport const login = (payload) => {\n  const request = (req) => ({ type: constants.LOGIN_PENDING, request: req });\n  const success = (response) => ({ type: constants.LOGIN_SUCCESS, response });\n  const failure = (error) => ({ type: constants.LOGIN_FAILURE, error });\n\n  return async (dispatch) => {\n    const res = post({ endpoint: 'LOGIN', auth: false, body: payload });\n\n    dispatch(request(res));\n\n    return res.then((response) => {\n      if (response?.status === 200) {\n        dispatch(success(response?.data));\n        localforage.setItem('user', response.data);\n        localStorage.setItem('token', response.data.data.user.token);\n        localStorage.setItem('user', JSON.stringify(response.data.data.user));\n      } else {\n        dispatch(failure(response));\n      }\n    });\n  };\n};\n\nexport const changePassword = (payload) => {\n  const request = (req) => ({ type: constants.CHANGE_PASSWORD_PENDING, request: req });\n  const success = (response) => ({ type: constants.CHANGE_PASSWORD_SUCCESS, response });\n  const failure = (error) => ({ type: constants.CHANGE_PASSWORD_FAILURE, error });\n\n  return async (dispatch) => {\n    const res = post({\n      endpoint: 'CHANGE_PASSWORD', auth: true, body: payload\n    });\n\n    dispatch(request(res));\n\n    return res.then((response) => {\n      if (response?.status === 200) {\n        dispatch(success(response?.data));\n      } else {\n        dispatch(failure(response?.errors));\n      }\n    });\n  };\n};\nexport const forgotPassword = (payload) => {\n  const request = (req) => ({ type: constants.FORGOT_PASSWORD_PENDING, request: req });\n  const success = (response) => ({ type: constants.FORGOT_PASSWORD_SUCCESS, response });\n  const failure = (error) => ({ type: constants.FORGOT_PASSWORD_FAILURE, error });\n\n  return async (dispatch) => {\n    const res = post({ endpoint: 'FORGOT_PASSWORD', auth: false, body: payload });\n\n    dispatch(request(res));\n\n    return res.then((response) => {\n      if (response?.status === 200) {\n        dispatch(success(response?.data));\n      } else {\n        // console.log(response);\n        dispatch(failure(response));\n      }\n    });\n  };\n};\nexport const resetPassword = (payload) => {\n  const request = (req) => ({ type: constants.RESET_PASSWORD_PENDING, request: req });\n  const success = (response) => ({ type: constants.RESET_PASSWORD_SUCCESS, response });\n  const failure = (error) => ({ type: constants.RESET_PASSWORD_FAILURE, error });\n\n  return async (dispatch) => {\n    const res = post({\n      endpoint: 'RESET_PASSWORD', auth: false, body: payload\n    });\n\n    dispatch(request(res));\n\n    return res.then((response) => {\n      if (response?.status === 200) {\n        dispatch(success(response?.data));\n      } else {\n        dispatch(failure(response));\n      }\n    });\n  };\n};\nexport const uploadLogo = ({ payload, setProgress }) => {\n  const request = (req) => ({ type: constants.UPLOAD_LOGO_PENDING, request: req });\n  const success = (response) => ({ type: constants.UPLOAD_LOGO_SUCCESS, response });\n  const failure = (error) => ({ type: constants.UPLOAD_LOGO_FAILURE, error });\n  return async (dispatch) => {\n    const res = post({\n      endpoint: 'LOGO',\n      auth: true,\n      body: payload,\n      setProgress,\n      multipart: true\n    });\n\n    dispatch(request(res));\n\n    return res.then((response) => {\n      if (response?.status === 200) {\n        dispatch(success(response?.data));\n      } else {\n        dispatch(failure(response));\n      }\n    });\n  };\n};\n","import { validationPatterns } from '../../../utilities/validation';\n\nconst formBuilderProps = (\n  {\n    formData,\n    handleBlur,\n    handleChange,\n    errors\n  }\n) => (\n  [\n    {\n      kind: 'input',\n      props: {\n        className: 'w-100 m-b-20',\n        name: 'current_password',\n        type: 'password',\n        label: 'Current Password',\n        value: formData?.current_password || '',\n        validations: {\n          required: true,\n          pattern: validationPatterns.password\n        },\n        error: errors?.current_password,\n        onBlur: handleBlur,\n        onChange: handleChange\n      }\n    },\n    {\n      kind: 'input',\n      props: {\n        className: 'w-100 m-b-20',\n        name: 'new_password',\n        type: 'password',\n        label: 'New Password',\n        value: formData?.new_password || '',\n        validations: {\n          required: true,\n          minLength: 8\n        },\n        error: errors?.new_password,\n        onBlur: handleBlur,\n        onChange: handleChange\n      }\n    },\n\n    {\n      kind: 'input',\n      props: {\n        className: 'w-100 m-b-20',\n        name: 'confirm_password',\n        type: 'password',\n        label: 'Confirm Password',\n        value: formData?.confirm_password || '',\n        validations: {\n          required: true,\n          confirm_password: true,\n          confirmPassword: true,\n          original: formData?.new_password\n        },\n        error: errors?.confirm_password,\n        onBlur: handleBlur,\n        onChange: handleChange\n      }\n    }\n  ]\n);\nexport default formBuilderProps;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormBuilder from '../../components/form/builders/form';\nimport formBuilderProps from './constants/changePassword';\nimport { validateField } from '../../utilities/validation';\nimport { slugToString } from '../../utilities/stringOperations';\nimport Modal from '../../components/microComponents/modal';\nimport { changePassword } from '../../redux/actions/authenticationActions';\n\nconst ChangePassword = () => {\n  /* redux */\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state.auth.changePassword);\n  /* state */\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const [show, setShow] = useState(false);\n\n  const queryParam = window.location.search.substring(1);\n\n  const handleRegister = () => {\n    setShow(true);\n    dispatch(changePassword(formData, queryParam));\n  };\n\n  // const handleClose = () => setShow(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormData((state) => ({\n      ...state,\n      [name]: value\n    }));\n  };\n  const modalTemplate = (\n    <div className={\n      // eslint-disable-next-line no-nested-ternary\n      (store?.status === 'failed')\n        ? 'mt-5 p-5'\n        : (\n          store?.status === 'initial' || store?.status === 'pending'\n            ? 'mt-5 p-5 '\n            : 'mt-5 p-5 bg-white'\n        )\n    }\n    >\n      <div className=\"text-wema\">\n        {\n          // (store?.status === 'pending' || store?.status === 'initial')\n          store?.status === 'pending'\n          && (\n            <div className=\"center-text text-white\">\n              Loading...\n            </div>\n          )\n        }\n        {\n          store?.status !== 'pending'\n          && (\n            <div className=\"\">\n              <h5 className=\"center-text text-muted\">{store?.status}</h5>\n              <div>\n                {\n                  store?.status === 'failed'\n                    ? (\n                      <div>\n                        We cannot verify this email, try again!\n                        <button onClick={() => setShow(false)} type=\"button\" className=\"btn w-25 center btn-small float-right\">\n                          Ok\n                        </button>\n                      </div>\n                    )\n                    : (\n                      <p>\n                        we have sent the next steps to your email.\n                        {/* { */}\n                        {/*  store?.status === 'success' */}\n                        {/*  && setTimeout(handleClose, 3000) */}\n                        {/* } */}\n                      </p>\n                    )\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n  const handleBlur = (e, validations) => {\n    const { name, value } = e.target;\n    const field = slugToString(name);\n    typeof field !== 'undefined'\n    && setErrors(\n      {\n        ...errors,\n        [name]: (\n          validateField(validations, field, value)\n        )\n      }\n    );\n  };\n\n  return (\n    <div className=\"content\">\n      <p>\n        Change Password\n      </p>\n      <div className=\"max-w-600 w-600 margin-center m-t-40 \">\n        <div className=\"login-form-container p-20\">\n          <p className=\"\">Change your password below</p>\n          <hr />\n          <div className=\"login-form\">\n            <FormBuilder\n              formItems={\n                formBuilderProps(\n                  {\n                    formData,\n                    handleBlur,\n                    handleChange,\n                    errors\n                  }\n                )\n              }\n            />\n            <button type=\"button\" className=\"text-wema float-left viewMoreBtn mt-3\" onClick={() => window.location.replace('/forgot-password')}>\n              &lt; Back\n            </button>\n            <button className=\"w-50 btn btn-small float-right\" type=\"button\" onClick={handleRegister}>Change Password</button>\n          </div>\n        </div>\n      </div>\n      <Modal\n        className={show ? 'max-w-400 right top' : 'max-w-400 right top off'}\n        content={modalTemplate}\n      />\n    </div>\n  );\n};\n\nexport default ChangePassword;\n"],"sourceRoot":""}