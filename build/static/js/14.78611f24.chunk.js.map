{"version":3,"sources":["pages/authentication/constants/newPassword.js","pages/authentication/NewPassword.jsx"],"names":["formBuilderProps","formData","handleBlur","handleChange","errors","kind","props","className","name","type","label","value","new_password","validations","required","pattern","validationPatterns","password","error","onBlur","onChange","confirm_password","confirmPassword","original","NewPassword","useState","setFormData","setErrors","show","setShow","handleClose","setTimeout","window","location","replace","modalTemplate","useEffect","formItems","e","target","field","slugToString","validateField","state","onClick","content"],"mappings":"0LAkDeA,EAhDU,SAAC,GAAD,IAErBC,EAFqB,EAErBA,SACAC,EAHqB,EAGrBA,WACAC,EAJqB,EAIrBA,aACAC,EALqB,EAKrBA,OALqB,MAQvB,CACE,CACEC,KAAM,QACNC,MAAO,CACLC,UAAW,eACXC,KAAM,eACNC,KAAM,WACNC,MAAO,eACPC,OAAe,OAARV,QAAQ,IAARA,OAAA,EAAAA,EAAUW,eAAgB,GACjCC,YAAa,CACXC,UAAU,EACVC,QAASC,IAAmBC,UAE9BC,MAAK,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAQQ,aACfO,OAAQjB,EACRkB,SAAUjB,IAId,CACEE,KAAM,QACNC,MAAO,CACLC,UAAW,eACXC,KAAM,mBACNC,KAAM,WACNC,MAAO,mBACPC,OAAe,OAARV,QAAQ,IAARA,OAAA,EAAAA,EAAUoB,mBAAoB,GACrCR,YAAa,CACXC,UAAU,EACVO,kBAAkB,EAClBC,iBAAiB,EACjBC,SAAQ,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAUW,cAEtBM,MAAK,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAQiB,iBACfF,OAAQjB,EACRkB,SAAUjB,M,wBCgDHqB,UAtFK,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACjBxB,EADiB,KACPyB,EADO,OAEID,mBAAS,IAFb,mBAEjBrB,EAFiB,KAETuB,EAFS,OAGAF,oBAAS,GAHT,mBAGjBG,EAHiB,KAGXC,EAHW,KASlBC,EAAc,WAClBD,GAAQ,GACRE,WAAWC,OAAOC,SAASC,QAAQ,SAAU,MA0BzCC,EACJ,qBAAK5B,UAAU,oCAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,YAAd,sCACA,0GAWN,OAJA6B,qBAAU,WACRR,GAAQG,WAAWD,EAAa,OAC/B,CAACF,IAGF,sBAAKrB,UAAU,UAAf,UACE,6CAGA,qBAAKA,UAAU,uCAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,mBAAGA,UAAU,GAAb,2CACA,uBACA,sBAAKA,UAAU,aAAf,UACE,cAAC,IAAD,CACE8B,UACErC,EACE,CACEC,WACAC,WA5CC,SAACoC,EAAGzB,GAAiB,IAAD,EACbyB,EAAEC,OAAlB/B,EAD6B,EAC7BA,KAAMG,EADuB,EACvBA,MACR6B,EAAQC,YAAajC,GACV,qBAAVgC,GACJb,EAAU,2BAENvB,GAFK,kBAGPI,EACCkC,YAAc7B,EAAa2B,EAAO7B,OAqCxBR,aAtDG,SAACmC,GAAO,IAAD,EACFA,EAAEC,OAAlB/B,EADkB,EAClBA,KAAMG,EADY,EACZA,MAEde,GAAY,SAACiB,GAAD,mBAAC,eACRA,GADO,kBAETnC,EAAOG,QAkDMP,aAKR,wBAAQG,UAAU,iCAAiCE,KAAK,SAASmC,QArEpD,WACrBf,GAAQ,IAoEA,qCAIN,cAAC,IAAD,CACEtB,UAAWqB,EAAO,0BAA4B,0BAC9CiB,QAASV","file":"static/js/14.78611f24.chunk.js","sourcesContent":["import { validationPatterns } from '../../../utilities/validation';\n\nconst formBuilderProps = (\n  {\n    formData,\n    handleBlur,\n    handleChange,\n    errors\n  }\n) => (\n  [\n    {\n      kind: 'input',\n      props: {\n        className: 'w-100 m-b-20',\n        name: 'new_password',\n        type: 'password',\n        label: 'New Password',\n        value: formData?.new_password || '',\n        validations: {\n          required: true,\n          pattern: validationPatterns.password\n        },\n        error: errors?.new_password,\n        onBlur: handleBlur,\n        onChange: handleChange\n      }\n    },\n\n    {\n      kind: 'input',\n      props: {\n        className: 'w-100 m-b-20',\n        name: 'confirm_password',\n        type: 'password',\n        label: 'Confirm Password',\n        value: formData?.confirm_password || '',\n        validations: {\n          required: true,\n          confirm_password: true,\n          confirmPassword: true,\n          original: formData?.new_password\n        },\n        error: errors?.confirm_password,\n        onBlur: handleBlur,\n        onChange: handleChange\n      }\n    }\n  ]\n);\nexport default formBuilderProps;\n","import React, { useEffect, useState } from 'react';\nimport FormBuilder from '../../components/form/builders/form';\nimport formBuilderProps from './constants/newPassword';\nimport { validateField } from '../../utilities/validation';\nimport { slugToString } from '../../utilities/stringOperations';\nimport Modal from '../../components/microComponents/modal';\n\nconst NewPassword = () => {\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const [show, setShow] = useState(false);\n\n  const handleRegister = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n    setTimeout(window.location.replace('/home'), 4000);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormData((state) => ({\n      ...state,\n      [name]: value\n    }));\n  };\n\n  const handleBlur = (e, validations) => {\n    const { name, value } = e.target;\n    const field = slugToString(name);\n    typeof field !== 'undefined'\n    && setErrors(\n      {\n        ...errors,\n        [name]: (\n          validateField(validations, field, value)\n        )\n      }\n    );\n  };\n\n  const modalTemplate = (\n    <div className=\"bg-white login-form-container p-5\">\n      <div className=\"center-text p-2\">\n        <h4 className=\"text-wema\">Password Reset Link Sent</h4>\n        <p>\n          A password reset link has been sent to your registered email address\n        </p>\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    show && setTimeout(handleClose, 4000);\n  }, [show]);\n\n  return (\n    <div className=\"content\">\n      <p>\n        New Password\n      </p>\n      <div className=\"max-w-600 w-600 margin-center m-t-40\">\n        <div className=\"login-form-container p-20\">\n          <p className=\"\">Enter your new password below</p>\n          <hr />\n          <div className=\"login-form\">\n            <FormBuilder\n              formItems={\n                formBuilderProps(\n                  {\n                    formData,\n                    handleBlur,\n                    handleChange,\n                    errors\n                  }\n                )\n              }\n            />\n            <button className=\"w-25 float-right btn btn-small\" type=\"button\" onClick={handleRegister}>Change Password</button>\n          </div>\n        </div>\n      </div>\n      <Modal\n        className={show ? 'max-w-400 center center' : 'max-w-400 right top off'}\n        content={modalTemplate}\n      />\n    </div>\n  );\n};\n\nexport default NewPassword;\n"],"sourceRoot":""}